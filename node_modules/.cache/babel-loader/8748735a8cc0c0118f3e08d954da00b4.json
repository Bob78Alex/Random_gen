{"ast":null,"code":"import _classCallCheck from \"/home/alex/Desktop/random/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Desktop/random/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Desktop/random/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Desktop/random/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Desktop/random/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Desktop/random/src/QuoteMachine.js\";\nimport React, { Component } from 'react';\n\nvar QuoteMachine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuoteMachine, _Component);\n\n  function QuoteMachine() {\n    var _this;\n\n    _classCallCheck(this, QuoteMachine);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuoteMachine).call(this));\n\n    _this.getRandomQuote = function (event) {\n      fetch(_this.END_POINT).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n\n        if (data[0].content && data[0].title & data[0].link) {\n          var quote = _this.state.quote;\n          var quoteData = data[0];\n          quote.content = quoteData.content;\n          quote.link = quoteData.link;\n          quote.title = quoteData.title;\n\n          _this.setState({\n            quote: quote\n          }, function () {\n            if (_this.state.hasQuote === false) {\n              _this.setstate({\n                hasQuote: true\n              });\n            }\n          });\n        } else {\n          return console.error('No quote has been found 404');\n        }\n      });\n    };\n\n    _this.renderQuote = function () {\n      var _this$state$quote = _this.state.quote,\n          title = _this$state$quote.title,\n          content = _this$state$quote.content,\n          link = _this$state$quote.link;\n      return React.createElement(\"div\", {\n        className: \"quote-result\",\n        onClick: function onClick() {\n          return _this.shareOnTwitter(title, link);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: link,\n        target: \"blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"link\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, title), JSON.stringify(content), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    };\n\n    _this.shareOnTwitter = function (text, url) {\n      window.open('http://twitter.com/share?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text), '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n    };\n\n    _this.state = {\n      quote: {\n        content: '',\n        link: '',\n        title: ''\n      },\n      hasQuote: false\n    };\n    _this.END_POINT = 'https://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1';\n    return _this;\n  }\n\n  _createClass(QuoteMachine, [{\n    key: \"render\",\n    value: function render() {\n      var hasQuote = this.state.hasQuote;\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Quote Machine \"), React.createElement(\"button\", {\n        onClick: this.getRandomQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Click me to get a random quote\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), hasQuote === true ? this.renderQuote() : 'no quote yet');\n    }\n  }]);\n\n  return QuoteMachine;\n}(Component);\n\nexport default QuoteMachine;","map":{"version":3,"sources":["/home/alex/Desktop/random/src/QuoteMachine.js"],"names":["React","Component","QuoteMachine","getRandomQuote","event","fetch","END_POINT","then","response","json","data","console","log","content","title","link","quote","state","quoteData","setState","hasQuote","setstate","error","renderQuote","shareOnTwitter","JSON","stringify","text","url","window","open","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass QuoteMachine extends Component {\n\nconstructor() {\n\tsuper();\n\tthis.state = {\n\t\tquote: {\n\t\t\tcontent: '',\n\t\t\tlink: '',\n\t\t\ttitle: ''\n\t\t},\n\t\thasQuote: false\n\t}\n\tthis.END_POINT = 'https://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1'\n}\n\ngetRandomQuote = event => {\n\tfetch(this.END_POINT)\n\t.then(response => response.json())\n\t.then(data => { console.log(data)\n\t\tif(data[0].content && data[0].title & data[0].link) {\n\t\t\tlet { quote } = this.state;\n\t\t\tlet quoteData = data[0];\n\t\t\tquote.content = quoteData.content;\n\t\t\tquote.link = quoteData.link;\n\t\t\tquote.title = quoteData.title;\n\t\t\tthis.setState({ quote }, () => {\n\t\t\t\tif(this.state.hasQuote === false){\n\t\t\t\t\tthis.setstate({ hasQuote: true})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\treturn console.error('No quote has been found 404')\n\t\t}\n\t})\n}\n\nrenderQuote = () => {\n\tconst { title, content, link } = this.state.quote;\n\treturn (\n\t\t<div className = \"quote-result\" onClick={() => this.shareOnTwitter(title, link)}>\n<a href={link} target=\"blank\">link</a>\t\t\n<h1>{title}</h1>\n{JSON.stringify(content)}\n<hr/>\n\t\t</div>)\n}\n\nshareOnTwitter = (text, url) => {\n    window.open('http://twitter.com/share?url='+encodeURIComponent(url)+'&text='+encodeURIComponent(text), '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n}\n\nrender() {\n\tconst { hasQuote } = this.state;\n\tconsole.log(this.state);\n\treturn (\n\t<div>\n<h1> Quote Machine </h1>\n<button onClick={this.getRandomQuote}>\n  Click me to get a random quote\n  </button>\n  <hr/>\n  {hasQuote === true ? \n  \tthis.renderQuote()\n  \t: 'no quote yet'}\n   </div>\n\t)\n}\n}\n\nexport default QuoteMachine;"]},"metadata":{},"sourceType":"module"}